// Code generated by ent, DO NOT EDIT.

package tennant

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the tennant type in the database.
	Label = "tennant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldExternalId holds the string denoting the externalid field in the database.
	FieldExternalId = "external_id"
	// FieldCloud holds the string denoting the cloud field in the database.
	FieldCloud = "cloud"
	// FieldAccountID holds the string denoting the account_id field in the database.
	FieldAccountID = "account_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeAccount holds the string denoting the account edge name in mutations.
	EdgeAccount = "account"
	// Table holds the table name of the tennant in the database.
	Table = "tennants"
	// AccountTable is the table that holds the account relation/edge.
	AccountTable = "tennants"
	// AccountInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	AccountInverseTable = "accounts"
	// AccountColumn is the table column denoting the account relation/edge.
	AccountColumn = "account_id"
)

// Columns holds all SQL columns for tennant fields.
var Columns = []string{
	FieldID,
	FieldExternalId,
	FieldCloud,
	FieldAccountID,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
