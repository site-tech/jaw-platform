directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Account implements Node {
  id: ID!
  name: String!
  createdAt: Time!
  tennants: [Tennant!]
}
"""A connection to a list of items."""
type AccountConnection {
  """A list of edges."""
  edges: [AccountEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AccountEdge {
  """The item at the end of the edge."""
  node: Account
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
AccountWhereInput is used for filtering Account objects.
Input was generated by ent.
"""
input AccountWhereInput {
  not: AccountWhereInput
  and: [AccountWhereInput!]
  or: [AccountWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """tennants edge predicates"""
  hasTennants: Boolean
  hasTennantsWith: [TennantWhereInput!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/site-tech/jaw-platform/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  accounts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Filtering options for Accounts returned from the connection."""
    where: AccountWhereInput
  ): AccountConnection!
  tennants(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Filtering options for Tennants returned from the connection."""
    where: TennantWhereInput
  ): TennantConnection!
}
type Tennant implements Node {
  id: ID!
  externalid: String! @goField(name: "ExternalId", forceResolver: false)
  cloud: String!
  accountID: ID!
  createdAt: Time!
  account: Account!
}
"""A connection to a list of items."""
type TennantConnection {
  """A list of edges."""
  edges: [TennantEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type TennantEdge {
  """The item at the end of the edge."""
  node: Tennant
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
TennantWhereInput is used for filtering Tennant objects.
Input was generated by ent.
"""
input TennantWhereInput {
  not: TennantWhereInput
  and: [TennantWhereInput!]
  or: [TennantWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """externalId field predicates"""
  externalid: String
  externalidNEQ: String
  externalidIn: [String!]
  externalidNotIn: [String!]
  externalidGT: String
  externalidGTE: String
  externalidLT: String
  externalidLTE: String
  externalidContains: String
  externalidHasPrefix: String
  externalidHasSuffix: String
  externalidEqualFold: String
  externalidContainsFold: String
  """cloud field predicates"""
  cloud: String
  cloudNEQ: String
  cloudIn: [String!]
  cloudNotIn: [String!]
  cloudGT: String
  cloudGTE: String
  cloudLT: String
  cloudLTE: String
  cloudContains: String
  cloudHasPrefix: String
  cloudHasSuffix: String
  cloudEqualFold: String
  cloudContainsFold: String
  """account_id field predicates"""
  accountID: ID
  accountIDNEQ: ID
  accountIDIn: [ID!]
  accountIDNotIn: [ID!]
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """account edge predicates"""
  hasAccount: Boolean
  hasAccountWith: [AccountWhereInput!]
}
